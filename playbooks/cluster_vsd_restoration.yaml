# This playbook was created by: Muzaffer Kahraman muzaffer.kahraman@outlook.com
#
# Purpose: [This playbook restores the mysql database backup for the Nuage VSD Cluster]

- hosts: vsd_cluster
  tasks:
  - name:  Stop Core Services
    shell: monit stop -g vsd-core

  - name: Wait Until Core Services Stop
    shell: echo "Not monitored $(monit summary -g vsd-core | grep -o "Not monitored" | wc -l)"
    register: output
    until: "output.stdout.find('Not monitored 15') != -1"
    retries: 25
    delay: 8

  - name:  Stop Common Services
    shell: monit stop -g vsd-common

  - name: Wait Until Common Services Stop
    shell: echo "Not monitored $(monit summary -g vsd-common | grep -o "Not monitored" | wc -l)"
    register: output
    until: "output.stdout.find('Not monitored 8') != -1"
    retries: 25
    delay: 8

- hosts: vsd_master
  tasks:
  - name: Restore the Database Backup
    shell: /opt/vsd/bin/vsd-restore.sh -e -m "{{ backup_file }}"
    register: restoration_output

  - name: Display the Restoration Status
    debug:
      msg: |
        stdout:
        {{ restoration_output.stdout }}

  - name: Perform Percona Bootstrap
    shell: /opt/vsd/sysmon/bootPercona.py --force
    register: bootstrap_output

  - name: Display the Bootstrap Status
    debug:
      msg: |
        stdout:
        {{ bootstrap_output.stdout }}

- hosts: vsd_cluster
  tasks:
  - name:  Start Common Services
    shell: monit start -g vsd-common

  - name: Wait Until Common Services Start
    shell: echo "Status ok $(monit summary -g vsd-common | grep -o "Status ok" | wc -l) Running $(monit summary -g vsd-common | grep -o "Running" | wc -l)"
    register: output
    until: "output.stdout.find('Status ok 4 Running 4') != -1"
    retries: 50
    delay: 8

  - name: Start Core Services
    shell: monit start -g vsd-core

  - name: Wait Until Core Services Start
    shell: echo "Status ok $(monit summary -g vsd-core | grep -o "Status ok" | wc -l) Running $(monit summary -g vsd-core | grep -o "Running" | wc -l)"
    register: output
    until: "output.stdout.find('Status ok 10 Running 5') != -1"
    retries: 50
    delay: 8
